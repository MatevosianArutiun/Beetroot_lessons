(function (factory) {
  typeof define === 'function' && define.amd ? define('main', factory) :
  factory();
}((function () { 'use strict';

  var name = prompt("What is your name?");
  alert("Hi,".concat(name));
  var YEAR = 2020;
  var birthDate = prompt("How old are you?");
  alert("Your birth date is " + (YEAR - birthDate));
  var A = prompt("What is your side length?");
  alert(A * 4 + " is the perimeter of the square");
  var PI = 3.1415;
  var R = prompt("What is the circle radius?");
  alert("S of the circle is " + PI * Math.pow(R, 2));
  var KM = prompt("What is the distance between cities (in KM)?");
  var TIME = prompt("How many time do you want to use for travel (hours)?");
  alert("You need to move " + KM / TIME + " KM per hour to be in time!");
  var DOLLAR = prompt("How many $ do you have?");
  var EURO_VALUE = 0.91;
  alert("You can get " + DOLLAR / EURO_VALUE + " EURO");
  var FLESH = prompt("How big is your flesh card (GB)?");
  alert("You can upload on your flesh card " + (FLESH * 1000 / 820).toFixed(0) + " Porn Films");
  var MONEY_AMOUNT = prompt("How much money do you have?");
  var CHOCLATE_PRICE = prompt("What is the price of one chocolate?");
  var CAN_BUY = MONEY_AMOUNT / CHOCLATE_PRICE;
  var REST = MONEY_AMOUNT % CHOCLATE_PRICE;
  alert("you can buy " + CAN_BUY.toFixed(0) + " chocolates and yor rest will be " + REST.toFixed(2) + " hrn"); // Сам не смог придумать формулу, как обычно гугл в помощ, надеюсь так норм)

  var ANY__NUM = prompt("Give me any 3 numbers!", "Any 3 numbers HERE please :)");
  alert(("" + ANY__NUM).split("").reverse().join("") + " How Do you like my magic?)");
  var DEPOSIT_SUM = prompt("What is your deposit sum?");
  var DEPOSIT_RESULT = DEPOSIT_SUM / 100 * 5 * 2;
  alert("You will get " + DEPOSIT_RESULT.toFixed(2) + " hrn for 2 years!");

})));

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsic3JjL2pzL21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5jb25zdCBuYW1lID0gcHJvbXB0KFwiV2hhdCBpcyB5b3VyIG5hbWU/XCIpO1xyXG5hbGVydChgSGksJHtuYW1lfWApO1xyXG5cclxuY29uc3QgWUVBUiA9IDIwMjA7XHJcbmNvbnN0IGJpcnRoRGF0ZSA9IHByb21wdChcIkhvdyBvbGQgYXJlIHlvdT9cIik7XHJcbmFsZXJ0KFwiWW91ciBiaXJ0aCBkYXRlIGlzIFwiICsgKFlFQVIgLSBiaXJ0aERhdGUpKTtcclxuXHJcbmNvbnN0IEEgPSBwcm9tcHQoXCJXaGF0IGlzIHlvdXIgc2lkZSBsZW5ndGg/XCIpO1xyXG5hbGVydChBICogNCArIFwiIGlzIHRoZSBwZXJpbWV0ZXIgb2YgdGhlIHNxdWFyZVwiKTtcclxuXHJcbmNvbnN0IFBJID0gMy4xNDE1O1xyXG5jb25zdCBSID0gcHJvbXB0KFwiV2hhdCBpcyB0aGUgY2lyY2xlIHJhZGl1cz9cIik7XHJcbmFsZXJ0KFwiUyBvZiB0aGUgY2lyY2xlIGlzIFwiICsgUEkgKiBNYXRoLnBvdyhSLCAyKSk7XHJcblxyXG5jb25zdCBLTSA9IHByb21wdChcIldoYXQgaXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gY2l0aWVzIChpbiBLTSk/XCIpO1xyXG5jb25zdCBUSU1FID0gcHJvbXB0KFwiSG93IG1hbnkgdGltZSBkbyB5b3Ugd2FudCB0byB1c2UgZm9yIHRyYXZlbCAoaG91cnMpP1wiKTtcclxuXHJcbmFsZXJ0KFwiWW91IG5lZWQgdG8gbW92ZSBcIiArIEtNIC8gVElNRSArIFwiIEtNIHBlciBob3VyIHRvIGJlIGluIHRpbWUhXCIpO1xyXG5cclxuY29uc3QgRE9MTEFSID0gcHJvbXB0KFwiSG93IG1hbnkgJCBkbyB5b3UgaGF2ZT9cIik7XHJcbmNvbnN0IEVVUk9fVkFMVUUgPSAwLjkxO1xyXG5hbGVydChcIllvdSBjYW4gZ2V0IFwiICsgRE9MTEFSIC8gRVVST19WQUxVRSArIFwiIEVVUk9cIik7XHJcblxyXG5jb25zdCBGTEVTSCA9IHByb21wdChcIkhvdyBiaWcgaXMgeW91ciBmbGVzaCBjYXJkIChHQik/XCIpO1xyXG5hbGVydChcclxuICBcIllvdSBjYW4gdXBsb2FkIG9uIHlvdXIgZmxlc2ggY2FyZCBcIiArXHJcbiAgICAoKEZMRVNIICogMTAwMCkgLyA4MjApLnRvRml4ZWQoMCkgK1xyXG4gICAgXCIgUG9ybiBGaWxtc1wiXHJcbik7XHJcblxyXG5jb25zdCBNT05FWV9BTU9VTlQgPSBwcm9tcHQoXCJIb3cgbXVjaCBtb25leSBkbyB5b3UgaGF2ZT9cIik7XHJcbmNvbnN0IENIT0NMQVRFX1BSSUNFID0gcHJvbXB0KFwiV2hhdCBpcyB0aGUgcHJpY2Ugb2Ygb25lIGNob2NvbGF0ZT9cIik7XHJcbmNvbnN0IENBTl9CVVkgPSBNT05FWV9BTU9VTlQgLyBDSE9DTEFURV9QUklDRTtcclxuY29uc3QgUkVTVCA9IE1PTkVZX0FNT1VOVCAlIENIT0NMQVRFX1BSSUNFO1xyXG5hbGVydChcclxuICBcInlvdSBjYW4gYnV5IFwiICtcclxuICAgIENBTl9CVVkudG9GaXhlZCgwKSArXHJcbiAgICBcIiBjaG9jb2xhdGVzIGFuZCB5b3IgcmVzdCB3aWxsIGJlIFwiICtcclxuICAgIFJFU1QudG9GaXhlZCgyKSArXHJcbiAgICBcIiBocm5cIlxyXG4pO1xyXG5cclxuLy8g0KHQsNC8INC90LUg0YHQvNC+0LMg0L/RgNC40LTRg9C80LDRgtGMINGE0L7RgNC80YPQu9GDLCDQutCw0Log0L7QsdGL0YfQvdC+INCz0YPQs9C7INCyINC/0L7QvNC+0YksINC90LDQtNC10Y7RgdGMINGC0LDQuiDQvdC+0YDQvClcclxuY29uc3QgQU5ZX19OVU0gPSBwcm9tcHQoXHJcbiAgXCJHaXZlIG1lIGFueSAzIG51bWJlcnMhXCIsXHJcbiAgXCJBbnkgMyBudW1iZXJzIEhFUkUgcGxlYXNlIDopXCJcclxuKTtcclxuYWxlcnQoXHJcbiAgKFwiXCIgKyBBTllfX05VTSkuc3BsaXQoXCJcIikucmV2ZXJzZSgpLmpvaW4oXCJcIikgKyBcIiBIb3cgRG8geW91IGxpa2UgbXkgbWFnaWM/KVwiXHJcbik7XHJcblxyXG5jb25zdCBERVBPU0lUX1NVTSA9IHByb21wdChcIldoYXQgaXMgeW91ciBkZXBvc2l0IHN1bT9cIik7XHJcbmNvbnN0IERFUE9TSVRfUkVTVUxUID0gKERFUE9TSVRfU1VNIC8gMTAwKSAqIDUgKiAyO1xyXG5hbGVydChcIllvdSB3aWxsIGdldCBcIiArIERFUE9TSVRfUkVTVUxULnRvRml4ZWQoMikgKyBcIiBocm4gZm9yIDIgeWVhcnMhXCIpOyJdLCJuYW1lcyI6WyJuYW1lIiwicHJvbXB0IiwiYWxlcnQiLCJZRUFSIiwiYmlydGhEYXRlIiwiQSIsIlBJIiwiUiIsIk1hdGgiLCJwb3ciLCJLTSIsIlRJTUUiLCJET0xMQVIiLCJFVVJPX1ZBTFVFIiwiRkxFU0giLCJ0b0ZpeGVkIiwiTU9ORVlfQU1PVU5UIiwiQ0hPQ0xBVEVfUFJJQ0UiLCJDQU5fQlVZIiwiUkVTVCIsIkFOWV9fTlVNIiwic3BsaXQiLCJyZXZlcnNlIiwiam9pbiIsIkRFUE9TSVRfU1VNIiwiREVQT1NJVF9SRVNVTFQiXSwibWFwcGluZ3MiOiI7Ozs7O0VBRUEsSUFBTUEsSUFBSSxHQUFHQyxNQUFNLENBQUMsb0JBQUQsQ0FBbkI7RUFDQUMsS0FBSyxjQUFPRixJQUFQLEVBQUw7RUFFQSxJQUFNRyxJQUFJLEdBQUcsSUFBYjtFQUNBLElBQU1DLFNBQVMsR0FBR0gsTUFBTSxDQUFDLGtCQUFELENBQXhCO0VBQ0FDLEtBQUssQ0FBQyx5QkFBeUJDLElBQUksR0FBR0MsU0FBaEMsQ0FBRCxDQUFMO0VBRUEsSUFBTUMsQ0FBQyxHQUFHSixNQUFNLENBQUMsMkJBQUQsQ0FBaEI7RUFDQUMsS0FBSyxDQUFDRyxDQUFDLEdBQUcsQ0FBSixHQUFRLGlDQUFULENBQUw7RUFFQSxJQUFNQyxFQUFFLEdBQUcsTUFBWDtFQUNBLElBQU1DLENBQUMsR0FBR04sTUFBTSxDQUFDLDRCQUFELENBQWhCO0VBQ0FDLEtBQUssQ0FBQyx3QkFBd0JJLEVBQUUsR0FBR0UsSUFBSSxDQUFDQyxHQUFMLENBQVNGLENBQVQsRUFBWSxDQUFaLENBQTlCLENBQUw7RUFFQSxJQUFNRyxFQUFFLEdBQUdULE1BQU0sQ0FBQyw4Q0FBRCxDQUFqQjtFQUNBLElBQU1VLElBQUksR0FBR1YsTUFBTSxDQUFDLHNEQUFELENBQW5CO0VBRUFDLEtBQUssQ0FBQyxzQkFBc0JRLEVBQUUsR0FBR0MsSUFBM0IsR0FBa0MsNkJBQW5DLENBQUw7RUFFQSxJQUFNQyxNQUFNLEdBQUdYLE1BQU0sQ0FBQyx5QkFBRCxDQUFyQjtFQUNBLElBQU1ZLFVBQVUsR0FBRyxJQUFuQjtFQUNBWCxLQUFLLENBQUMsaUJBQWlCVSxNQUFNLEdBQUdDLFVBQTFCLEdBQXVDLE9BQXhDLENBQUw7RUFFQSxJQUFNQyxLQUFLLEdBQUdiLE1BQU0sQ0FBQyxrQ0FBRCxDQUFwQjtFQUNBQyxLQUFLLENBQ0gsdUNBQ0UsQ0FBRVksS0FBSyxHQUFHLElBQVQsR0FBaUIsR0FBbEIsRUFBdUJDLE9BQXZCLENBQStCLENBQS9CLENBREYsR0FFRSxhQUhDLENBQUw7RUFNQSxJQUFNQyxZQUFZLEdBQUdmLE1BQU0sQ0FBQyw2QkFBRCxDQUEzQjtFQUNBLElBQU1nQixjQUFjLEdBQUdoQixNQUFNLENBQUMscUNBQUQsQ0FBN0I7RUFDQSxJQUFNaUIsT0FBTyxHQUFHRixZQUFZLEdBQUdDLGNBQS9CO0VBQ0EsSUFBTUUsSUFBSSxHQUFHSCxZQUFZLEdBQUdDLGNBQTVCO0VBQ0FmLEtBQUssQ0FDSCxpQkFDRWdCLE9BQU8sQ0FBQ0gsT0FBUixDQUFnQixDQUFoQixDQURGLEdBRUUsbUNBRkYsR0FHRUksSUFBSSxDQUFDSixPQUFMLENBQWEsQ0FBYixDQUhGLEdBSUUsTUFMQyxDQUFMOztFQVNBLElBQU1LLFFBQVEsR0FBR25CLE1BQU0sQ0FDckIsd0JBRHFCLEVBRXJCLDhCQUZxQixDQUF2QjtFQUlBQyxLQUFLLENBQ0gsQ0FBQyxLQUFLa0IsUUFBTixFQUFnQkMsS0FBaEIsQ0FBc0IsRUFBdEIsRUFBMEJDLE9BQTFCLEdBQW9DQyxJQUFwQyxDQUF5QyxFQUF6QyxJQUErQyw2QkFENUMsQ0FBTDtFQUlBLElBQU1DLFdBQVcsR0FBR3ZCLE1BQU0sQ0FBQywyQkFBRCxDQUExQjtFQUNBLElBQU13QixjQUFjLEdBQUlELFdBQVcsR0FBRyxHQUFmLEdBQXNCLENBQXRCLEdBQTBCLENBQWpEO0VBQ0F0QixLQUFLLENBQUMsa0JBQWtCdUIsY0FBYyxDQUFDVixPQUFmLENBQXVCLENBQXZCLENBQWxCLEdBQThDLG1CQUEvQyxDQUFMOzs7OyJ9
