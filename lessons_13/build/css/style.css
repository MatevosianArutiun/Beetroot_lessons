@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300;700&display=swap");.container{max-width:900px;margin:0 auto}*{margin:0;padding:0;box-sizing:border-box;scroll-behavior:smooth}a,body,button,input{font-family:Lato,sans-serif}a{text-decoration:none}ol,ul{list-style:none}.container{padding:0 24px}.header{background-image:url(../../images/hero-bg.jpg);background-size:cover;background-position:50%;background-repeat:no-repeat;padding-top:280px;display:flex;flex-direction:column;justify-content:center;align-items:center;flex-wrap:nowrap}.header__logo{width:70px;height:70px;margin-bottom:90px;fill:#fff;stroke:#fff}@media screen and (min-width:768px){.header__logo{stroke:#fff;stroke-width:2;stroke-dasharray:500 500;stroke-dashoffset:100;-webkit-animation:dasharray 5s infinite alternate;animation:dasharray 5s infinite alternate}@-webkit-keyframes dasharray{to{stroke-dasharray:0 40;fill:none}}@keyframes dasharray{to{stroke-dasharray:0 40;fill:none}}}.header__title{font-size:3.375rem;font-weight:600;color:#fff;text-transform:uppercase;letter-spacing:10px;margin-bottom:50px}.header__title--center{display:block;text-align:center}.header__text{font-size:.9375rem;font-weight:400;color:#fff;letter-spacing:1.5px;line-height:1.6;text-transform:uppercase}.header__text:last-of-type{margin-bottom:200px}.header__scroll{width:23px;height:37px;margin-bottom:100px}@media screen and (min-width:768px){.header__scroll{-webkit-animation-duration:1.5s;animation-duration:1.5s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:bounce-1;animation-name:bounce-1;-webkit-animation-timing-function:linear;animation-timing-function:linear}@-webkit-keyframes bounce-1{0%{transform:translateY(0)}50%{transform:translateY(-10px)}to{transform:translateY(0)}}@keyframes bounce-1{0%{transform:translateY(0)}50%{transform:translateY(-10px)}to{transform:translateY(0)}}}.logo,.scroll{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
