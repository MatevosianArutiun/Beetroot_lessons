@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300;700&display=swap");
.container {
  max-width: 900px;
  margin: 0 auto; }

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  scroll-behavior: smooth; }

body, a, button, input {
  font-family: "Lato", sans-serif; }

a {
  text-decoration: none; }

ul, ol {
  list-style: none; }

.container {
  padding: 0 24px; }

.header {
  background-image: url(../images/hero-bg.jpg);
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  padding-top: 280px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap; }
  .header__logo {
    width: 70px;
    height: 70px;
    margin-bottom: 90px;
    fill: white;
    stroke: white; }
    @media screen and (min-width: 768px) {
      .header__logo {
        stroke: white;
        stroke-width: 2;
        stroke-dasharray: 500 500;
        stroke-dashoffset: 100;
        animation: dasharray 5s infinite alternate; }
      @keyframes dasharray {
        100% {
          stroke-dasharray: 0 40;
          fill: none; } } }
  .header__title {
    font-size: 3.375rem;
    font-weight: 600;
    color: white;
    text-transform: uppercase;
    letter-spacing: 10px;
    margin-bottom: 50px; }
    .header__title--center {
      display: block;
      text-align: center; }
  .header__text {
    font-size: 0.9375rem;
    font-weight: 400;
    color: white;
    letter-spacing: 1.5px;
    line-height: 1.6;
    text-transform: uppercase; }
    .header__text:nth-last-of-type(1) {
      margin-bottom: 200px; }
  .header__scroll {
    width: 23px;
    height: 37px;
    margin-bottom: 100px; }
    @media screen and (min-width: 768px) {
      .header__scroll {
        animation-duration: 1.5s;
        animation-iteration-count: infinite;
        animation-name: bounce-1;
        animation-timing-function: linear; }
      @keyframes bounce-1 {
        0% {
          transform: translateY(0); }
        50% {
          transform: translateY(-10px); }
        100% {
          transform: translateY(0); } } }

.logo {
  display: none; }

.scroll {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
